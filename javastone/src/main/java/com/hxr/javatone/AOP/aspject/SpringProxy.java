package com.hxr.javatone.AOP.aspject;import org.aspectj.lang.JoinPoint;import org.aspectj.lang.annotation.*;import org.springframework.core.annotation.Order;import org.springframework.stereotype.Component;/** * Created with IntelliJ IDEA. * Project: test-jar * Author: Kevin * Date: 2018/9/28 * Time: 下午4:33 */@Aspect@Component@Order(value = 2)public class SpringProxy {	@Pointcut("execution(* add(..))")	private void pointcut() {}	@Before("aop.aspject.SpringProxy.pointcut()")	private void before(JoinPoint joinPoint) {		System.out.println("target:" + joinPoint.getTarget());		System.out.println("before");	}	@After("aop.aspject.SpringProxy.pointcut()")	private void after(JoinPoint joinPoint) {		System.out.println("target:" + joinPoint.getTarget());		System.out.println("after");	}//	@Before("aop.aspject.SpringProxy.pointcut()")//	private void around(JoinPoint joinPoint){//		System.out.println("CurrentTime = " + System.currentTimeMillis());//	}}