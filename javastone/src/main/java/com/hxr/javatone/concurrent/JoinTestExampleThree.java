package com.hxr.javatone.concurrent;/** * test loop join * Created with IntelliJ IDEA. * Project: test-jar * Author: Kevin * Date: 2017/11/26 * Time: 上午11:29 */public class JoinTestExampleThree {	static class CustomThread1 extends Thread{		@Override		public void run() {			String threadName = Thread.currentThread().getName();			System.out.println(threadName + " start.");			try {				for (int i = 0; i < 5; i++) {					System.out.println(threadName + " loop at " + i);					Thread.sleep(1000);				}				System.out.println(threadName + " end.");			} catch (Exception e) {				System.out.println("Exception from " + threadName + ".run");			}		}	}	static class CustomThread2 extends Thread{		CustomThread1 t1;		public CustomThread2(CustomThread1 t1) {			this.t1 = t1;		}		@Override		public void run() {			String threadName = Thread.currentThread().getName();			System.out.println(threadName + " start.");			try {				t1.join();				System.out.println(threadName + " end.");			} catch (Exception e) {				System.out.println("Exception from " + threadName + ".run");			}		}	}	public static void main(String[] args) {		String threadName = Thread.currentThread().getName();		System.out.println(threadName + " start.");		CustomThread1 t1 = new CustomThread1();		CustomThread2 t2 = new CustomThread2(t1);		try {			t1.start();			Thread.sleep(2000);			t2.start();//			t2.join();		} catch (Exception e) {			System.out.println("Exception from main");		}		System.out.println(threadName + " end!");	}}