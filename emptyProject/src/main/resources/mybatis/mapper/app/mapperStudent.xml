<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--      
	This file is automatically generated by autoCode(https://git.oschina.net/durcframework/autoCode)
-->
<mapper namespace="app.dao.StudentDao">
	<!-- 
    字段备注信息:
	ID : 
	NAME : 
	POLITICS_STATUS : 
	NATIONALITY : 
	STU_NO : 
	GENDER : 
	DEPARTMENT : 
	ADDRESS : 
	MOBILE : 
	REGIST_DATE : 
	BIRTHDAY : 
    -->
	<resultMap id="queryResultMap" type="app.entity.Student">
		<result column="ID" property="id" jdbcType="INTEGER"/>
		<result column="NAME" property="name" jdbcType="VARCHAR"/>
		<result column="POLITICS_STATUS" property="politicsStatus" jdbcType="INTEGER"/>
		<result column="NATIONALITY" property="nationality" jdbcType="VARCHAR"/>
		<result column="STU_NO" property="stuNo" jdbcType="VARCHAR"/>
		<result column="GENDER" property="gender" jdbcType="TINYINT"/>
		<result column="DEPARTMENT" property="department" jdbcType="INTEGER"/>
		<result column="ADDRESS" property="address" jdbcType="VARCHAR"/>
		<result column="MOBILE" property="mobile" jdbcType="VARCHAR"/>
		<result column="REGIST_DATE" property="registDate" jdbcType="TIMESTAMP"/>
		<result column="BIRTHDAY" property="birthday" jdbcType="TIMESTAMP"/>
	</resultMap>
	<!-- 根据条件查询记录 -->
	<select id="find" parameterType="org.durcframework.core.expression.ExpressionQuery" resultMap="queryResultMap">SELECT t.ID , t.NAME , t.POLITICS_STATUS , t.NATIONALITY , t.STU_NO , t.GENDER , t.DEPARTMENT , t.ADDRESS , t.MOBILE , t.REGIST_DATE , t.BIRTHDAY FROM student t
		<include refid="expressionBlock.where"/>  
		<choose>
			<when test="sortname == null">ORDER BY t.ID desc</when>
			<otherwise>ORDER BY ${order}</otherwise>
		</choose>  
		<if test="!isQueryAll">LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}</if> 
	</select>
	<!-- 根据条件查询记录数 -->
	<select id="findTotalCount" parameterType="org.durcframework.core.expression.ExpressionQuery" resultType="java.lang.Integer">SELECT count(*) FROM student t 
		<include refid="expressionBlock.where"/> 
	</select>
	<!-- 保存,保存全部字段 -->
	<insert id="save" parameterType="app.entity.Student" keyProperty="id" keyColumn="ID" useGeneratedKeys="true">INSERT INTO student ( `NAME` , `POLITICS_STATUS` , `NATIONALITY` , `STU_NO` , `GENDER` , `DEPARTMENT` , `ADDRESS` , `MOBILE` , `REGIST_DATE` , `BIRTHDAY` ) VALUES ( #{name,jdbcType=VARCHAR} , #{politicsStatus,jdbcType=INTEGER} , #{nationality,jdbcType=VARCHAR} , #{stuNo,jdbcType=VARCHAR} , #{gender,jdbcType=TINYINT} , #{department,jdbcType=INTEGER} , #{address,jdbcType=VARCHAR} , #{mobile,jdbcType=VARCHAR} , #{registDate,jdbcType=TIMESTAMP} , #{birthday,jdbcType=TIMESTAMP} )</insert>
	<!-- 保存,保存不为NULL的字段 -->
	<insert id="saveNotNull" parameterType="app.entity.Student" keyProperty="id" keyColumn="ID" useGeneratedKeys="true">INSERT INTO student 
		<trim prefix="(" suffix=")" suffixOverrides=","> 
			<if test="name != null">`NAME`,</if>  
			<if test="politicsStatus != null">`POLITICS_STATUS`,</if>  
			<if test="nationality != null">`NATIONALITY`,</if>  
			<if test="stuNo != null">`STU_NO`,</if>  
			<if test="gender != null">`GENDER`,</if>  
			<if test="department != null">`DEPARTMENT`,</if>  
			<if test="address != null">`ADDRESS`,</if>  
			<if test="mobile != null">`MOBILE`,</if>  
			<if test="registDate != null">`REGIST_DATE`,</if>  
			<if test="birthday != null">`BIRTHDAY`,</if> 
		</trim>  
		<trim prefix="values (" suffix=")" suffixOverrides=","> 
			<if test="name != null">#{name,jdbcType=VARCHAR},</if>  
			<if test="politicsStatus != null">#{politicsStatus,jdbcType=INTEGER},</if>  
			<if test="nationality != null">#{nationality,jdbcType=VARCHAR},</if>  
			<if test="stuNo != null">#{stuNo,jdbcType=VARCHAR},</if>  
			<if test="gender != null">#{gender,jdbcType=TINYINT},</if>  
			<if test="department != null">#{department,jdbcType=INTEGER},</if>  
			<if test="address != null">#{address,jdbcType=VARCHAR},</if>  
			<if test="mobile != null">#{mobile,jdbcType=VARCHAR},</if>  
			<if test="registDate != null">#{registDate,jdbcType=TIMESTAMP},</if>  
			<if test="birthday != null">#{birthday,jdbcType=TIMESTAMP},</if> 
		</trim> 
	</insert>
	<!-- 更新,更新全部字段 -->
	<update id="update" parameterType="app.entity.Student">UPDATE student 
		<set>NAME=#{name,jdbcType=VARCHAR}, POLITICS_STATUS=#{politicsStatus,jdbcType=INTEGER}, NATIONALITY=#{nationality,jdbcType=VARCHAR}, STU_NO=#{stuNo,jdbcType=VARCHAR}, GENDER=#{gender,jdbcType=TINYINT}, DEPARTMENT=#{department,jdbcType=INTEGER}, ADDRESS=#{address,jdbcType=VARCHAR}, MOBILE=#{mobile,jdbcType=VARCHAR}, REGIST_DATE=#{registDate,jdbcType=TIMESTAMP}, BIRTHDAY=#{birthday,jdbcType=TIMESTAMP},</set> WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	<!-- 根据指定条件更新 -->
	<update id="updateByExpression">UPDATE student 
		<set>NAME=#{entity.name,jdbcType=VARCHAR}, POLITICS_STATUS=#{entity.politicsStatus,jdbcType=INTEGER}, NATIONALITY=#{entity.nationality,jdbcType=VARCHAR}, STU_NO=#{entity.stuNo,jdbcType=VARCHAR}, GENDER=#{entity.gender,jdbcType=TINYINT}, DEPARTMENT=#{entity.department,jdbcType=INTEGER}, ADDRESS=#{entity.address,jdbcType=VARCHAR}, MOBILE=#{entity.mobile,jdbcType=VARCHAR}, REGIST_DATE=#{entity.registDate,jdbcType=TIMESTAMP}, BIRTHDAY=#{entity.birthday,jdbcType=TIMESTAMP},</set>  
		<include refid="expressionBlock.updateWhere"/> 
	</update>
	<!-- 更新不为NULL的字段 -->
	<update id="updateNotNull" parameterType="app.entity.OrderInfo">UPDATE student 
		<set> 
			<if test="name != null">NAME=#{name,jdbcType=VARCHAR},</if>  
			<if test="politicsStatus != null">POLITICS_STATUS=#{politicsStatus,jdbcType=INTEGER},</if>  
			<if test="nationality != null">NATIONALITY=#{nationality,jdbcType=VARCHAR},</if>  
			<if test="stuNo != null">STU_NO=#{stuNo,jdbcType=VARCHAR},</if>  
			<if test="gender != null">GENDER=#{gender,jdbcType=TINYINT},</if>  
			<if test="department != null">DEPARTMENT=#{department,jdbcType=INTEGER},</if>  
			<if test="address != null">ADDRESS=#{address,jdbcType=VARCHAR},</if>  
			<if test="mobile != null">MOBILE=#{mobile,jdbcType=VARCHAR},</if>  
			<if test="registDate != null">REGIST_DATE=#{registDate,jdbcType=TIMESTAMP},</if>  
			<if test="birthday != null">BIRTHDAY=#{birthday,jdbcType=TIMESTAMP},</if> 
		</set> WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	<!-- 根据指定条件更新不为NULL的字段 -->
	<update id="updateNotNullByExpression">UPDATE student 
		<set> 
			<if test="entity.name != null">NAME=#{entity.name,jdbcType=VARCHAR},</if>  
			<if test="entity.politicsStatus != null">POLITICS_STATUS=#{entity.politicsStatus,jdbcType=INTEGER},</if>  
			<if test="entity.nationality != null">NATIONALITY=#{entity.nationality,jdbcType=VARCHAR},</if>  
			<if test="entity.stuNo != null">STU_NO=#{entity.stuNo,jdbcType=VARCHAR},</if>  
			<if test="entity.gender != null">GENDER=#{entity.gender,jdbcType=TINYINT},</if>  
			<if test="entity.department != null">DEPARTMENT=#{entity.department,jdbcType=INTEGER},</if>  
			<if test="entity.address != null">ADDRESS=#{entity.address,jdbcType=VARCHAR},</if>  
			<if test="entity.mobile != null">MOBILE=#{entity.mobile,jdbcType=VARCHAR},</if>  
			<if test="entity.registDate != null">REGIST_DATE=#{entity.registDate,jdbcType=TIMESTAMP},</if>  
			<if test="entity.birthday != null">BIRTHDAY=#{entity.birthday,jdbcType=TIMESTAMP},</if> 
		</set>  
		<include refid="expressionBlock.updateWhere"/> 
	</update>
	<!-- 根据主键获取单条记录 -->
	<select id="get" resultMap="queryResultMap" parameterType="app.entity.Student">SELECT t.ID , t.NAME , t.POLITICS_STATUS , t.NATIONALITY , t.STU_NO , t.GENDER , t.DEPARTMENT , t.ADDRESS , t.MOBILE , t.REGIST_DATE , t.BIRTHDAY FROM student t WHERE ID = #{id,jdbcType=INTEGER}</select>
	<!-- 根据条件获取单条记录 -->
	<select id="getByExpression" resultMap="queryResultMap" parameterType="org.durcframework.core.expression.ExpressionQuery">SELECT t.ID , t.NAME , t.POLITICS_STATUS , t.NATIONALITY , t.STU_NO , t.GENDER , t.DEPARTMENT , t.ADDRESS , t.MOBILE , t.REGIST_DATE , t.BIRTHDAY FROM student t
		<include refid="expressionBlock.where"/> 
	</select>
	<!-- 根据主键删除记录 -->
	<delete id="del" parameterType="app.entity.Student">DELETE FROM student WHERE ID = #{id,jdbcType=INTEGER}</delete>
	<!-- 根据条件删除记录 -->
	<delete id="delByExpression" parameterType="org.durcframework.core.expression.ExpressionQuery">DELETE FROM student 
		<include refid="expressionBlock.where"/> 
	</delete>
</mapper>
