<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinal.emp.dao.CustomerBasicDao">
    <resultMap id="queryResultMap" type="com.chinal.emp.entity.CustomerBasic">
                <result column="id" property="id" jdbcType="INTEGER" />
                <result column="name" property="name" jdbcType="VARCHAR" />
                <result column="idcardnum" property="idcardnum" jdbcType="VARCHAR" />
                <result column="type" property="type" jdbcType="INTEGER" />
                <result column="birthday" property="birthday" jdbcType="VARCHAR" />
                <result column="wedding_day" property="weddingDay" jdbcType="VARCHAR" />
                <result column="kehujingli" property="kehujingli" jdbcType="VARCHAR" />
                <result column="sex" property="sex" jdbcType="VARCHAR" />
                <result column="laiyuan" property="laiyuan" jdbcType="VARCHAR" />
                <result column="note" property="note" jdbcType="VARCHAR" />
                <result column="addr" property="addr" jdbcType="VARCHAR" />
            </resultMap>

    <select id="find" parameterType="org.durcframework.core.expression.ExpressionQuery"
		resultMap="queryResultMap">
		SELECT 
                  t.id
                , t.name
                , t.idcardnum
                , t.type
                , t.birthday
                , t.wedding_day
                , t.kehujingli
                , t.sex
                , t.laiyuan
                , t.note
                , t.addr
        		FROM customer_basic t
		<include refid="expressionBlock.where" />
		<choose>
			<when test="sortname == null">
				ORDER BY t.id desc
			</when>
			<otherwise>
				ORDER BY ${order}
			</otherwise>
		</choose>
		<if test="!isQueryAll">
			LIMIT
			#{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>


    <select id="findTotalCount" parameterType="org.durcframework.core.expression.ExpressionQuery"
		resultType="java.lang.Integer">
		SELECT count(*) FROM customer_basic t
		<include refid="expressionBlock.where" />
    </select>

    <insert id="save" parameterType="com.chinal.emp.entity.CustomerBasic"
    keyProperty="id" keyColumn="id" useGeneratedKeys="true"
    >
	INSERT INTO customer_basic
         (
                                          `name`
                                        , `idcardnum`
                                        , `type`
                                        , `birthday`
                                        , `wedding_day`
                                        , `kehujingli`
                                        , `sex`
                                        , `laiyuan`
                                        , `note`
                                        , `addr`
                              )
	VALUES (
                                                  #{name,jdbcType=VARCHAR}
                                        , #{idcardnum,jdbcType=VARCHAR}
                                        , #{type,jdbcType=INTEGER}
                                        , #{birthday,jdbcType=VARCHAR}
                                        , #{weddingDay,jdbcType=VARCHAR}
                                        , #{kehujingli,jdbcType=VARCHAR}
                                        , #{sex,jdbcType=VARCHAR}
                                        , #{laiyuan,jdbcType=VARCHAR}
                                        , #{note,jdbcType=VARCHAR}
                                        , #{addr,jdbcType=VARCHAR}
                     
        )
	</insert>


    <update id="update" parameterType="com.chinal.emp.entity.CustomerBasic">
    UPDATE customer_basic
    SET 
        <if test="name!=null and name!=''">
        name=#{name,jdbcType=VARCHAR}
        </if>
                                      
                <if test="idcardnum!=null and idcardnum!=''">
        ,idcardnum=#{idcardnum,jdbcType=VARCHAR}
        </if>
                <if test="type!=null and type!=''">
        ,type=#{type,jdbcType=INTEGER}
        </if>
                <if test="birthday!=null and birthday!=''">
        ,birthday=#{birthday,jdbcType=VARCHAR}
        </if>
                <if test="weddingDay!=null and weddingDay!=''">
        ,wedding_day=#{weddingDay,jdbcType=VARCHAR}
        </if>
                <if test="kehujingli!=null and kehujingli!=''">
        ,kehujingli=#{kehujingli,jdbcType=VARCHAR}
        </if>
                <if test="sex!=null and sex!=''">
        ,sex=#{sex,jdbcType=VARCHAR}
        </if>
                <if test="laiyuan!=null and laiyuan!=''">
        ,laiyuan=#{laiyuan,jdbcType=VARCHAR}
        </if>
                <if test="note!=null and note!=''">
        ,note=#{note,jdbcType=VARCHAR}
        </if>
        <if test="addr!=null and addr!=''">
        ,addr=#{addr,jdbcType=VARCHAR}
        </if>
                      WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="get" resultMap="queryResultMap" parameterType="com.chinal.emp.entity.CustomerBasic">
		SELECT 
                         id
                , name
                , idcardnum
                , type
                , birthday
                , wedding_day
                , kehujingli
                , sex
                , laiyuan
                , note
                , addr
        		FROM customer_basic t
		WHERE id = #{id,jdbcType=INTEGER}
	</select>
	
	<delete id="del" parameterType="com.chinal.emp.entity.CustomerBasic">
		DELETE FROM customer_basic
		WHERE id = #{id,jdbcType=INTEGER}
	</delete>

</mapper>